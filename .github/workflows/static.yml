name: 高级部署静态内容到GitHub Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-deployment-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置Node.js版本
        uses: actions/setup-node@v3
        with:
          node-version: '14' # 或其他适当版本

      - name: 生成 package.json 文件
        run: |
          echo "{}" > package.json
          npm init -y

      - name: 添加项目依赖
        run: |
          npm install <你的依赖项，例如 react react-dom 等>
          # 例如：npm install react react-dom

      - name: 安装依赖
        run: npm install

      - name: 运行Lint检查
        run: npm run lint

      - name: 运行单元测试
        run: npm test

      - name: 构建项目
        run: npm run build

      - name: 配置GitHub Pages
        uses: actions/configure-pages@v3

      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v1
        with:
          path: './build'

      - name: 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: 部署状态通知（成功）
        if: ${{ success() }}
        uses: actions/github-script@v4
        with:
          script: |
            const githubScript = require('@actions/github');
            const context = githubScript.context;
            const core = require('@actions/core');

            const status = core.getInput('status');
            const url = core.getInput('url');

            githubScript.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status === '成功' ? 'success' : 'failure',
              target_url: url,
              description: `Deployment ${status}`,
              context: 'Deployment Status'
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 部署状态通知（失败）
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          script: |
            const githubScript = require('@actions/github');
            const context = githubScript.context;
            const core = require('@actions/core');

            const status = core.getInput('status');
            const url = core.getInput('url');

            githubScript.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status === '成功' ? 'success' : 'failure',
              target_url: url,
              description: `Deployment ${status}`,
              context: 'Deployment Status'
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}